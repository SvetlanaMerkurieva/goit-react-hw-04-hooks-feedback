{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/App/App.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Section","title","className","s","FeedbackOptions","options","onLeaveFeedback","listButton","map","name","type","button","onClick","Statistics","statistics","total","positivePercentage","key","value","text","number","Notification","message","App","useState","good","setGood","neutral","setNeutral","bad","setBad","countTotalFeedbacks","Object","entries","Хорошо","Нейтрально","Плохо","Math","round","countPositiveFeedbackPercentage","app","appHeader","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,OAAS,6B,kBCA3DD,EAAOC,QAAU,CAAC,WAAa,oCAAoC,OAAS,kC,gBCA5ED,EAAOC,QAAU,CAAC,IAAM,iBAAiB,UAAY,yB,iBCArDD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,QAAU,gC,qICEfC,EAAU,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACxB,OAAO,oBAAIC,UAAWC,IAAEF,MAAjB,SAAyBA,K,gBCDrBG,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACzC,OACE,oBAAIJ,UAAWC,IAAEI,WAAjB,SACGF,EAAQG,KAAI,SAAAC,GAAI,OACf,6BACE,wBACEC,KAAK,SACLR,UAAWC,IAAEQ,OACbC,QAAS,kBAAMN,EAAgBG,IAHjC,SAKGA,Y,gBCVAI,EAAa,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC9C,OACE,+BACGF,EAAWN,KAAI,mCAAES,EAAF,KAAOC,EAAP,YACd,qBAAIhB,UAAWC,IAAEgB,KAAjB,UACGF,EADH,KACS,uBAAMf,UAAWC,IAAEiB,OAAnB,UAA4BF,EAA5B,aAGX,qBAAIhB,UAAWC,IAAEgB,KAAjB,qJAC4B,uBAAMjB,UAAWC,IAAEiB,OAAnB,UAA4BL,EAA5B,UAE5B,qBAAIb,UAAWC,IAAEgB,KAAjB,qHAEE,uBAAMjB,UAAWC,IAAEiB,OAAnB,UAA4BJ,EAA5B,OAFF,Y,gBCZOK,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAO,oBAAIpB,UAAWC,IAAEmB,QAAjB,SAA2BA,K,gBCIrB,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsBJ,mBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAiBMC,EAAsB,WAC1B,OAAON,EAAOE,EAAUE,GASpBf,EAAakB,OAAOC,QAAQ,CAChCC,uCAAQT,EACRU,+DAAYR,EACZS,iCAAOP,IAEHd,EAAQgB,IACRf,EAZkC,WACtC,IAAMD,EAAQgB,IACd,OAAOM,KAAKC,MAAOb,EAAOV,EAAS,KAUVwB,GAE3B,OACE,qBAAKrC,UAAWC,IAAEqC,IAAlB,SACE,yBAAQtC,UAAWC,IAAEsC,UAArB,UACE,cAAC,EAAD,CAASxC,MAAM,kJACf,cAAC,EAAD,CAAiBI,QAbP,CAAC,uCAAU,+DAAc,kCAaAC,gBArCjB,SAAAG,GACtB,OAAQA,GACN,IAAK,uCACHiB,GAAQ,SAAAgB,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,+DACHd,GAAW,SAAAc,GAAS,OAAIA,EAAY,KACpC,MACF,IAAK,iCACHZ,GAAO,SAAAY,GAAS,OAAIA,EAAY,KAChC,MACF,QACE,YA0BE3B,GAAS,cAAC,EAAD,CAAcO,QAAQ,kEAChCP,GACC,qCACE,cAAC,EAAD,CAASd,MAAM,4GACf,cAAC,EAAD,CACEa,WAAYA,EACZC,MAAOA,EACPC,mBAAoBA,YCpDlC2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACtB,EAAD,MAEFuB,SAASC,eAAe,W","file":"static/js/main.923819e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Statistics_text__3yKD4\",\"number\":\"Statistics_number___ar5T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listButton\":\"FeedbackOptions_listButton__3q8cG\",\"button\":\"FeedbackOptions_button__oPcnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1wePa\",\"appHeader\":\"App_appHeader__32R3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2zjgA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1QeCh\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport const Section = ({ title }) => {\r\n  return <h2 className={s.title}>{title}</h2>;\r\n};\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nexport const FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <ul className={s.listButton}>\r\n      {options.map(name => (\r\n        <li>\r\n          <button\r\n            type=\"button\"\r\n            className={s.button}\r\n            onClick={() => onLeaveFeedback(name)}\r\n          >\r\n            {name}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nexport const Statistics = ({ statistics, total, positivePercentage }) => {\r\n  return (\r\n    <ul>\r\n      {statistics.map(([key, value]) => (\r\n        <li className={s.text}>\r\n          {key}: <span className={s.number}>{value} </span>\r\n        </li>\r\n      ))}\r\n      <li className={s.text}>\r\n        Общее количество отзывов: <span className={s.number}>{total} </span>\r\n      </li>\r\n      <li className={s.text}>\r\n        Позитивных отзывов:\r\n        <span className={s.number}>{positivePercentage} </span> %\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import s from './Notification.module.css';\r\n\r\nexport const Notification = ({ message }) => {\r\n  return <h2 className={s.message}>{message}</h2>;\r\n};\r\n","import { useState } from 'react';\r\nimport { Section } from '../Section/Section';\r\nimport { FeedbackOptions } from '../FeedbackOptions/FeedbackOptions';\r\nimport { Statistics } from '../Statistics/Statistics';\r\nimport { Notification } from '../Notification/Notification';\r\nimport s from './App.module.css';\r\n\r\nexport default function App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const onLeaveFeedback = name => {\r\n    switch (name) {\r\n      case 'Хорошо':\r\n        setGood(prevState => prevState + 1);\r\n        break;\r\n      case 'Нейтрально':\r\n        setNeutral(prevState => prevState + 1);\r\n        break;\r\n      case 'Плохо':\r\n        setBad(prevState => prevState + 1);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const countTotalFeedbacks = () => {\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    const total = countTotalFeedbacks();\r\n    return Math.round((good / total) * 100);\r\n  };\r\n\r\n  const options = ['Хорошо', 'Нейтрально', 'Плохо'];\r\n  const statistics = Object.entries({\r\n    Хорошо: good,\r\n    Нейтрально: neutral,\r\n    Плохо: bad,\r\n  });\r\n  const total = countTotalFeedbacks();\r\n  const positivePercentage = countPositiveFeedbackPercentage();\r\n\r\n  return (\r\n    <div className={s.app}>\r\n      <header className={s.appHeader}>\r\n        <Section title=\"Пожалуйста, оставьте отзыв\" />\r\n        <FeedbackOptions options={options} onLeaveFeedback={onLeaveFeedback} />\r\n        {!total && <Notification message=\"Отзывов нет\" />}\r\n        {total && (\r\n          <>\r\n            <Section title=\"Статистика отзывов\" />\r\n            <Statistics\r\n              statistics={statistics}\r\n              total={total}\r\n              positivePercentage={positivePercentage}\r\n            />\r\n          </>\r\n        )}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n/*class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onLeaveFeedback = name => {\r\n    this.setState(prevState => {\r\n      return {\r\n        [name]: prevState[name] + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const total = this.countTotalFeedback();\r\n    const good = Object.values(this.state);\r\n    return Math.round((good[0] / total) * 100);\r\n  };\r\n\r\n  render() {\r\n    const options = Object.keys(this.state);\r\n    const statistics = Object.entries(this.state);\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = countPositiveFeedbackPercentage();\r\n    return (\r\n      <div className={s.app}>\r\n        <header className={s.appHeader}>\r\n          <Section title=\"Пожалуйста, оставьте отзыв\" />\r\n          <FeedbackOptions\r\n            options={options}\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          />\r\n          {!total && <Notification message=\"Отзывов нет\" />}\r\n          {total && (\r\n            <>\r\n              <Section title=\"Статистика отзывов\" />\r\n              <Statistics\r\n                statistics={statistics}\r\n                total={total}\r\n                positivePercentage={positivePercentage}\r\n              />\r\n            </>\r\n          )}\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;*/\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}